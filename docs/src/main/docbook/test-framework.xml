<?xml version="1.0"?>
<!--

    DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

    Copyright (c) 2012-2013 Oracle and/or its affiliates. All rights reserved.

    The contents of this file are subject to the terms of either the GNU
    General Public License Version 2 only ("GPL") or the Common Development
    and Distribution License("CDDL") (collectively, the "License").  You
    may not use this file except in compliance with the License.  You can
    obtain a copy of the License at
    http://glassfish.java.net/public/CDDL+GPL_1_1.html
    or packager/legal/LICENSE.txt.  See the License for the specific
    language governing permissions and limitations under the License.

    When distributing the software, include this License Header Notice in each
    file and include the License file at packager/legal/LICENSE.txt.

    GPL Classpath Exception:
    Oracle designates this particular file as subject to the "Classpath"
    exception as provided by Oracle in the GPL Version 2 section of the License
    file that accompanied this code.

    Modifications:
    If applicable, add the following below the License Header, with the fields
    enclosed by brackets [] replaced by your own identifying information:
    "Portions Copyright [year] [name of copyright owner]"

    Contributor(s):
    If you wish your version of this file to be governed by only the CDDL or
    only the GPL Version 2, indicate your decision by adding "[Contributor]
    elects to include this software in this distribution under the [CDDL or GPL
    Version 2] license."  If you don't indicate a single choice of license, a
    recipient has the option to distribute your version of this file under
    either the CDDL, the GPL Version 2 or to extend the choice of license to
    its licensees as provided above.  However, if you add GPL Version 2 code
    and therefore, elected the GPL Version 2 license, then the option applies
    only if the new code is made subject to such option by the copyright
    holder.

-->
<!DOCTYPE chapter [<!ENTITY % ents SYSTEM "jersey.ent" > %ents; ]>
<chapter xmlns="http://docbook.org/ns/docbook"
         version="5.0"
         xml:lang="en"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd
                             http://www.w3.org/1999/xlink http://www.w3.org/1999/xlink.xsd"
         xml:id="test-framework">

    <title>Jersey Test Framework</title>

    <para>TODO: Describe Test Framework</para>

    <!-- The following text is copied from Jersey 1 documentation / client-->
    <section>
        <title>Testing services</title>
        <para>The Jersey client API was originally developed to aid the testing of the Jersey server-side,
            primarily to make it easier to write functional tests in conjunction with the JUnit framework
            for execution and reporting. It is used extensively and there are currently over 1000 tests.
        </para>
        <para>Embedded servers, Grizzly and a special in-memory server, are utilized to deploy the
            test-based services. Many of the Jersey samples contain tests that utilize the client API to
            server both for testing and examples of how to use the API. The samples utilize Grizzly or
            embedded Glassfish to deploy the services.
        </para>
        <para>The following code snippets are presented from the single unit test
            <literal>HelloWorldWebAppTest</literal>
            of the
            <link xlink:href="https://maven.java.net/service/local/artifact/maven/redirect?r=&repository;&amp;g=com.sun.jersey.samples&amp;a=helloworld-webapp&amp;v=&version;&amp;c=project&amp;e=zip">helloworld-webapp</link>
            sample.
            The
            <literal>setUp</literal>
            method, called before a test is executed, creates an instance of
            the Glassfish server, deploys the application, and a
            <literal>WebResource</literal>
            instance
            that references the base resource:
            <programlisting language="java">@Override
                protected void setUp() throws Exception {
                super.setUp();

                // Start Glassfish
                glassfish = new GlassFish(BASE_URI.getPort());

                // Deploy Glassfish referencing the web.xml
                ScatteredWar war = new ScatteredWar(
                BASE_URI.getRawPath(), new File("src/main/webapp"),
                new File("src/main/webapp/WEB-INF/web.xml"),
                Collections.singleton(
                new File("target/classes").
                toURI().toURL()));
                glassfish.deploy(war);

                Client c = Client.create();
                r = c.resource(BASE_URI);
                }
            </programlisting>
            The
            <literal>tearDown</literal>
            method, called after a test is executed,
            stops the Glassfish server.
            <programlisting language="java">@Override
                protected void tearDown() throws Exception {
                super.tearDown();
                glassfish.stop();
                }
            </programlisting>
        </para>
        <para>The
            <literal>testHelloWorld</literal>
            method tests that the response
            to a
            <literal>GET</literal>
            request to the Web resource returns “Hello World”:
            <programlisting language="java">public void testHelloWorld() throws Exception {
                String responseMsg = r.path("helloworld").
                get(String.class);
                assertEquals("Hello World", responseMsg);
                }
            </programlisting>
            Note the use of the
            <literal>path</literal>
            method on the
            <literal>WebResource</literal>
            to
            build from the base<literal>WebResource</literal>.
        </para>
    </section>
</chapter>
