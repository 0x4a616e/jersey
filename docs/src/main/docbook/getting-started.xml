<?xml version="1.0"?>
<!--

    DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

    Copyright (c) 2010-2013 Oracle and/or its affiliates. All rights reserved.

    The contents of this file are subject to the terms of either the GNU
    General Public License Version 2 only ("GPL") or the Common Development
    and Distribution License("CDDL") (collectively, the "License").  You
    may not use this file except in compliance with the License.  You can
    obtain a copy of the License at
    http://glassfish.java.net/public/CDDL+GPL_1_1.html
    or packager/legal/LICENSE.txt.  See the License for the specific
    language governing permissions and limitations under the License.

    When distributing the software, include this License Header Notice in each
    file and include the License file at packager/legal/LICENSE.txt.

    GPL Classpath Exception:
    Oracle designates this particular file as subject to the "Classpath"
    exception as provided by Oracle in the GPL Version 2 section of the License
    file that accompanied this code.

    Modifications:
    If applicable, add the following below the License Header, with the fields
    enclosed by brackets [] replaced by your own identifying information:
    "Portions Copyright [year] [name of copyright owner]"

    Contributor(s):
    If you wish your version of this file to be governed by only the CDDL or
    only the GPL Version 2, indicate your decision by adding "[Contributor]
    elects to include this software in this distribution under the [CDDL or GPL
    Version 2] license."  If you don't indicate a single choice of license, a
    recipient has the option to distribute your version of this file under
    either the CDDL, the GPL Version 2 or to extend the choice of license to
    its licensees as provided above.  However, if you add GPL Version 2 code
    and therefore, elected the GPL Version 2 license, then the option applies
    only if the new code is made subject to such option by the copyright
    holder.

-->
<!DOCTYPE chapter [<!ENTITY % ents SYSTEM "jersey.ent" > %ents; ]>
<chapter xmlns="http://docbook.org/ns/docbook"
         version="5.0"
         xml:lang="en"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd
                             http://www.w3.org/1999/xlink http://www.w3.org/1999/xlink.xsd"
         xml:id="getting-started">
    <title>Getting Started</title>

    <para>
        This chapter provides a quick introduction on how to get started building
        RESTful services using Jersey. The example described here uses the lightweight Grizzly HTTP server.
        At the end of this chapter you will see how to implement equivalent functionality as a JavaEE web application you can deploy on any servlet container supporting Servlet 2.5 and higher.
    </para>
    <section xml:id="new-from-archetype">
        <title>Creating a New Project from Maven Archetype</title>
        <para></para>
        <para>If you want to depend on Jersey snapshot versions the following repository needs to be added to the pom:
            <programlisting language="xml" linenumbering="unnumbered">&lt;repository&gt;
                &lt;id&gt;snapshot-repository.java.net&lt;/id&gt;
                &lt;name&gt;Java.net Snapshot Repository for Maven&lt;/name&gt;
                &lt;url&gt;https://maven.java.net/content/repositories/snapshots/&lt;/url&gt;
                &lt;layout&gt;default&lt;/layout&gt;
                &lt;/repository&gt;</programlisting>
        </para>
        <para>Now, to create a new Jersey project, based on Grizzly 2 container, from a maven archetype, execute the following in the directory where the new project should reside:
            <programlisting language="bash" linenumbering="unnumbered">mvn archetype:generate -DarchetypeArtifactId=jersey-quickstart-grizzly2 -DarchetypeGroupId=org.glassfish.jersey.archetypes -DinteractiveMode=false -DgroupId=com.example -DartifactId=simple-service -Dpackage=com.example -DarchetypeVersion=&version;</programlisting>
        </para>
        <para>Feel free to adjust the group id, package name and artifact id of your new project in the line above, or you can change it after it gets generated by updating the project pom.xml</para>
    </section>
    <section xml:id="new-project-structure">
        <title>Exploring the Newly Created Project</title>
        <para>TODO</para>
    </section>
    <section xml:id="new-project-customize">
        <title>Customizing the JAX-RS Resource</title>
        <para>TODO: instructions on how to make simple edits to the newly created resource</para>
    </section>

    <section xml:id="running-project">
        <title>Running the Project</title>
        <para>TODO: instructions on how to run the project</para>
    </section>

    <section xml:id="new-webapp">
        <title>Creating a JavaEE Web Application</title>
        <para>TODO</para>
    </section>

    <section xml:id="exploring-jersey-examples">
        <title>Exploring Other Jersey Examples</title>
        <para>Jersey codebase contains a number of useful samples on how to use various JAX-RS and Jersey features.
            Please refer to the [TODO: Examples] section of this guide for more information on those.
        </para>
    </section>

</chapter>
